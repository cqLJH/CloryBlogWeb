# 通过 Github actions， 在 Github 仓库的每一次 commit 后自动同步到 Gitee 上
name: sync2gitee
on:
  push:
    branches:
      - master
      - main
jobs:
  repo-sync:
    env:
      dst_key: ${{ secrets.GITEE_AND_GITHUB_PRIVATE_KEY}}
      dst_token: ${{ secrets.GITEE_TOKEN }}
      gitee_user: ${{ secrets.GITEE_USER }}
    runs-on: ubuntu-latest
    steps:
      - name: sync github -> gitee
        uses: Yikun/hub-mirror-action@master
        if: env.dst_key && env.dst_token && env.gitee_user
        with:
          # 必选，需要同步的 Github 用户（源）
          src: 'github/cqLJH'
          # 必选，需要同步到的 Gitee 用户（目的）
          dst: 'gitee/cqLJH'
          # 使用ssh方式clone，保证原仓的可读性
          #clone_style: 'ssh'
          # 必选，Gitee公钥对应的私钥，https://gitee.com/profile/sshkeys
          dst_key: ${{ secrets.GITEE_AND_GITHUB_PRIVATE_KEY  }}
          # 必选，Gitee对应的用于创建仓库的token，https://gitee.com/profile/personal_access_tokens
          dst_token: ${{ secrets.GITEE_TOKEN }}
          account_type: user # 账户类型
          clone_style: 'https' # 使用https方式进行clone，也可以使用ssh
          debug: true # 启用后会显示所有执行命令
          force_update: true # 启用后，强制同步，即强制覆盖目的端仓库
          # 直接取当前项目的仓库名
          static_list: ${{ github.event.repository.name }}
          # 目的端的可见性设置为私有仓
          dst_visibility: 'private'
          timeout: '600s' # git超时设置，超时后会自动重试git操作
          # 还有黑、白名单，静态名单机制，可以用于更新某些指定库
          # static_list: 'repo_name,repo_name2'
          # black_list: 'repo_name,repo_name2'
          # white_list: 'repo_name,repo_name2'
